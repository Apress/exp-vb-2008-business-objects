<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ClearInvalidException" xml:space="preserve">
    <value>Clear is an invalid operation</value>
  </data>
  <data name="InsertInvalidException" xml:space="preserve">
    <value>Insert is an invalid operation</value>
  </data>
  <data name="RemoveInvalidException" xml:space="preserve">
    <value>Remove is an invalid operation</value>
  </data>
  <data name="ChangeInvalidException" xml:space="preserve">
    <value>Changing an element is an invalid operation</value>
  </data>
  <data name="ParentSetException" xml:space="preserve">
    <value>Parent value can only be set for child objects</value>
  </data>
  <data name="ChildDeleteException" xml:space="preserve">
    <value>Can not directly mark a child object for deletion - use its parent collection</value>
  </data>
  <data name="NoSaveChildException" xml:space="preserve">
    <value>Can not directly save a child object</value>
  </data>
  <data name="NoSaveEditingException" xml:space="preserve">
    <value>Object is still being edited and can not be saved</value>
  </data>
  <data name="NoSaveInvalidException" xml:space="preserve">
    <value>Object is not valid and can not be saved</value>
  </data>
  <data name="CreateNotSupportedException" xml:space="preserve">
    <value>Invalid operation - create not allowed</value>
  </data>
  <data name="FetchNotSupportedException" xml:space="preserve">
    <value>Invalid operation - fetch not allowed</value>
  </data>
  <data name="UpdateNotSupportedException" xml:space="preserve">
    <value>Invalid operation - update not allowed</value>
  </data>
  <data name="DeleteNotSupportedException" xml:space="preserve">
    <value>Invalid operation - delete not allowed</value>
  </data>
  <data name="NoBeginEditChildException" xml:space="preserve">
    <value>BeginEdit is not valid on a child object</value>
  </data>
  <data name="NoCancelEditChildException" xml:space="preserve">
    <value>CancelEdit is not valid on a child object</value>
  </data>
  <data name="NoApplyEditChildException" xml:space="preserve">
    <value>ApplyEdit is not valid on a child object</value>
  </data>
  <data name="NoSuchValueExistsException" xml:space="preserve">
    <value>No such value exists:</value>
  </data>
  <data name="ErrorReadingValueException" xml:space="preserve">
    <value>Error reading value:</value>
  </data>
  <data name="StringToDateException" xml:space="preserve">
    <value>String value can not be converted to a date</value>
  </data>
  <data name="ValueNotSmartDateException" xml:space="preserve">
    <value>Value is not a SmartDate</value>
  </data>
  <data name="NoPrincipalAllowedException" xml:space="preserve">
    <value>No principal object should be passed to DataPortal when using Windows integrated security</value>
  </data>
  <data name="BusinessPrincipalException" xml:space="preserve">
    <value>Principal must be of type BusinessPrincipal, not</value>
  </data>
  <data name="SmartDateT" xml:space="preserve">
    <value>t</value>
  </data>
  <data name="SmartDateToday" xml:space="preserve">
    <value>today</value>
  </data>
  <data name="SmartDateY" xml:space="preserve">
    <value>y</value>
  </data>
  <data name="SmartDateYesterday" xml:space="preserve">
    <value>yesterday</value>
  </data>
  <data name="SmartDateTom" xml:space="preserve">
    <value>tom</value>
  </data>
  <data name="SmartDateTomorrow" xml:space="preserve">
    <value>tomorrow</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>failed</value>
  </data>
  <data name="FailedOnServer" xml:space="preserve">
    <value>failed on the server</value>
  </data>
  <data name="MethodCallFailed" xml:space="preserve">
    <value>method call failed</value>
  </data>
  <data name="MethodNotImplemented" xml:space="preserve">
    <value>not implemented</value>
  </data>
  <data name="ExecuteNotSupportedException" xml:space="preserve">
    <value>Invalid operation - execute not allowed</value>
  </data>
  <data name="InsertNotSupportedException" xml:space="preserve">
    <value>Invalid operation - insert not allowed</value>
  </data>
  <data name="GetIdValueCantBeNull" xml:space="preserve">
    <value>GetIdValue must not return Nothing</value>
  </data>
  <data name="PropertyGetNotAllowed" xml:space="preserve">
    <value>Property get not allowed</value>
  </data>
  <data name="PropertySetNotAllowed" xml:space="preserve">
    <value>Property set not allowed</value>
  </data>
  <data name="NoDeleteRootException" xml:space="preserve">
    <value>Invalid for root objects - use Delete instead</value>
  </data>
  <data name="NothingNotValid" xml:space="preserve">
    <value>Argument must not be null</value>
  </data>
  <data name="PrimitiveTypeRequired" xml:space="preserve">
    <value>Type parameter must be a primitive type</value>
  </data>
  <data name="PropertyCopyFailed" xml:space="preserve">
    <value>Property copy failed</value>
  </data>
  <data name="MaxValueRule" xml:space="preserve">
    <value>{0} can not exceed {1}</value>
  </data>
  <data name="MinValueRule" xml:space="preserve">
    <value>{0} can not be less than {1}</value>
  </data>
  <data name="StringMaxLengthRule" xml:space="preserve">
    <value>{0} can not exceed {1} characters</value>
  </data>
  <data name="StringRequiredRule" xml:space="preserve">
    <value>{0} required</value>
  </data>
  <data name="RegExMatchRule" xml:space="preserve">
    <value>{0} does not match regular expression</value>
  </data>
  <data name="InvalidRuleMethodException" xml:space="preserve">
    <value>Invalid rule method (instance methods of the target object not allowed)</value>
  </data>
  <data name="TypeLoadException" xml:space="preserve">
    <value>Failed to load type '{0}'</value>
  </data>
  <data name="StringMinLengthRule" xml:space="preserve">
    <value>{0} can not be less than {1} characters</value>
  </data>
  <data name="MethodExecuteNotAllowed" xml:space="preserve">
    <value>Method execution not allowed</value>
  </data>
  <data name="ValidationRulesException" xml:space="preserve">
    <value>Validation rule {1} failed in property {0}</value>
  </data>
  <data name="NoSuchFactoryMethod" xml:space="preserve">
    <value>No such factory method:{0}</value>
  </data>
  <data name="EditLevelMismatchException" xml:space="preserve">
    <value>Edit level mismatch in {0}</value>
  </data>
  <data name="FilterRequiredException" xml:space="preserve">
    <value>Filter parameter and filter provider are required</value>
  </data>
  <data name="BrokenRulesMergeException" xml:space="preserve">
    <value>Merge only allowed on custom collection objects</value>
  </data>
  <data name="PropertyLoadException" xml:space="preserve">
    <value>Property load or set failed for property {0} ({1})</value>
  </data>
  <data name="UserNotAuthorizedException" xml:space="preserve">
    <value>User not authorized to {0} object type {1}</value>
  </data>
  <data name="UnRegisteredPropertyException" xml:space="preserve">
    <value>Can not use unregistered property. Call RegisterProperty() for property {0}</value>
  </data>
  <data name="DatabaseNameNotFound" xml:space="preserve">
    <value>Database name not found in config file ({0})</value>
  </data>
  <data name="PropertyNotRegistered" xml:space="preserve">
    <value>One or more properties are not registered for this type</value>
  </data>
  <data name="MobileFormatterUnableToDeserialize" xml:space="preserve">
    <value>The Type '{0}' was unable to be deserialized, double check that the assembly containing this class has the same name on the Client and Server and that it is referenced by your server application</value>
  </data>
  <data name="MustImplementIMobileObject" xml:space="preserve">
    <value>Type {0} must implement IMobileObject</value>
  </data>
  <data name="ObjectNotSerializableFormatted" xml:space="preserve">
    <value>Object not serializable ({0})</value>
  </data>
  <data name="CannotSerializeCollectionsNotOfIMobileObject" xml:space="preserve">
    <value>Cannot serialize collections not of type IMobileObject</value>
  </data>
  <data name="ConstructorsWithParametersNotSupported" xml:space="preserve">
    <value>Constructor with parameters are not supported</value>
  </data>
  <data name="BindingSourceNotProvided" xml:space="preserve">
    <value>A root binding source has not been provided.</value>
  </data>
  <data name="ExceptionOccurredDuringSaveOperation" xml:space="preserve">
    <value>An exception ocurred during the save operation</value>
  </data>
  <data name="ArrayIsMultiDimensional" xml:space="preserve">
    <value>Array is multi-dimensional</value>
  </data>
  <data name="AuthenticationProviderDoesNotImplementIAuthorizeDataPortal" xml:space="preserve">
    <value>Csla Authentication Provider specified does not implement IAuthorizeDataPortal</value>
  </data>
  <data name="AuthorizationProviderNameNotSpecified" xml:space="preserve">
    <value>Csla Authorization Provider App Setting name not specified</value>
  </data>
  <data name="BusyObjectsMayNotBeMarkedBusy" xml:space="preserve">
    <value>Objects that are marked busy may not be marked busy again</value>
  </data>
  <data name="BusyObjectsMayNotBeSaved" xml:space="preserve">
    <value>Objects that are marked busy may not be saved</value>
  </data>
  <data name="CannotHaveMemberEqualsMemberInAnExpression" xml:space="preserve">
    <value>Cannot have 'member' == 'member' in an expression</value>
  </data>
  <data name="CanReadAuthorizationRuleDescription" xml:space="preserve">
    <value>You are not authorized to read this field</value>
  </data>
  <data name="CanWriteAuthorizationRuleDescription" xml:space="preserve">
    <value>You are not authorized to write to this field</value>
  </data>
  <data name="ClientQueryIsInvalid" xml:space="preserve">
    <value>The client query is invalid:</value>
  </data>
  <data name="CreateMethodNameNotSpecified" xml:space="preserve">
    <value>Create method name not specified in MobileFactory attribute</value>
  </data>
  <data name="CslaAuthenticationProviderNotSet" xml:space="preserve">
    <value>Csla Authentication Provider not set!</value>
  </data>
  <data name="DefaultConstructor" xml:space="preserve">
    <value>Default Constructor</value>
  </data>
  <data name="DeleteMethodNameNotSpecified" xml:space="preserve">
    <value>Delete method name not specified in MobileFactory attribute</value>
  </data>
  <data name="ExpressionTypeNotSupportedToObtainValue" xml:space="preserve">
    <value>The expression type {0} is not supported to obtain a value</value>
  </data>
  <data name="FactoryTypeNotFoundException" xml:space="preserve">
    <value>Factory type or assembly could not be loaded ({0})</value>
  </data>
  <data name="FetchMethodNameNotSpecified" xml:space="preserve">
    <value>Fetch method name not specified in MobileFactory attribute</value>
  </data>
  <data name="IndexIsOutOfRange" xml:space="preserve">
    <value>Index is out of range</value>
  </data>
  <data name="NullArrayReference" xml:space="preserve">
    <value>Nothing array reference</value>
  </data>
  <data name="ObjectTypeCouldNotBeLoaded" xml:space="preserve">
    <value>Object type or assembly could not be loaded ({0})</value>
  </data>
  <data name="SortingNotSupported" xml:space="preserve">
    <value>Sorting not supported</value>
  </data>
  <data name="UnhandledBindingType" xml:space="preserve">
    <value>Unhandled binding type '{0}'</value>
  </data>
  <data name="UnhandledExpressionType" xml:space="preserve">
    <value>Unhandled expression type: '{0}'</value>
  </data>
  <data name="UpdateMethodNameNotSpecified" xml:space="preserve">
    <value>Update method name not specified in MobileFactory attribute</value>
  </data>
  <data name="IManagePropertiesRequiredException" xml:space="preserve">
    <value>Target object must implement IManageProperties</value>
  </data>
  <data name="MemberNotFoundException" xml:space="preserve">
    <value>Member not found on object ({0})</value>
  </data>
  <data name="PropertyRegisterNotAllowed" xml:space="preserve">
    <value>Can not register property {0} after containing type has been instantiated</value>
  </data>
  <data name="IEditableCollectionRequiredException" xml:space="preserve">
    <value>Target object must implement IEditableCollection</value>
  </data>
</root>